<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lia BrÃ¼ggemann</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Lia BrÃ¼ggemann</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Made with [Hugo](https://gohugo.io/) &amp; [Magnolia](https://github.com/ololiuhqui/magnolia-free-hugo-theme) by [Myself](https://github.com/BlyDoesCoding)

 Original Theme licensed under [MIT license](https://github.com/ololiuhqui/magnolia-free-hugo-theme/blob/main/LICENSE.md) ðŸ“„</copyright>
    <lastBuildDate>Tue, 21 Oct 2025 12:10:50 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raylib</title>
      <link>http://localhost:1313/posts/raylib/</link>
      <pubDate>Tue, 21 Oct 2025 12:10:50 +0200</pubDate>
      <guid>http://localhost:1313/posts/raylib/</guid>
      <description>&lt;h2 id=&#34;games-and-libraries&#34;&gt;Games and libraries&lt;/h2&gt;&#xA;&lt;p&gt;I have recently been wanting to do more in terms of game dev. At the moment I&amp;rsquo;m also trying to get more into C; thus, I decided to dive into said endeavor with C. A game usually needs 3 components.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;* getting input from the player&#xA;* processing said inputs&#xA;* displaying fancy images to the player&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;I started with searching for a good solution to graphics. We have plenty of ways to do so, just to name a few:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Preserving Digital Information without Internet</title>
      <link>http://localhost:1313/posts/kiwix/</link>
      <pubDate>Mon, 28 Oct 2024 12:10:50 +0200</pubDate>
      <guid>http://localhost:1313/posts/kiwix/</guid>
      <description>&lt;h2 id=&#34;the-concept&#34;&gt;The Concept&lt;/h2&gt;&#xA;&lt;p&gt;Accessing internet articles, like Wikipedia entries, is usually straightforward as they&amp;rsquo;re hosted on remote servers. However, problems can arise with slow, limited, or no internet access. Downloading web pages for offline reading is an option, but there&amp;rsquo;s a more elegant and convenient solution.&lt;/p&gt;&#xA;&lt;h2 id=&#34;kiwix&#34;&gt;Kiwix&lt;/h2&gt;&#xA;&lt;p&gt;Let me introduce you to Kiwix, an open-source app that simplifies downloading and reading web content, including Wikipedia, in a user-friendly format.&lt;/p&gt;&#xA;&lt;p&gt;You can find Kiwix on their website &lt;a href=&#34;https://kiwix.org&#34;&gt;here&lt;/a&gt; or explore their GitHub page &lt;a href=&#34;https://github.com/kiwix&#34;&gt;here&lt;/a&gt;. The best part is that Kiwix is available for almost every platform.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Steamdeck Modding Guide</title>
      <link>http://localhost:1313/posts/steamdeck/</link>
      <pubDate>Thu, 03 Oct 2024 10:49:18 +0200</pubDate>
      <guid>http://localhost:1313/posts/steamdeck/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;The Steam Deck is a device that I became fascinated with instantly since it was announced. After using my LCD model for some time, I dived into the rabbit hole of modding it. I decided to write a comprehensive post about all the possibilities. Sit back, sip on your tea, and enjoy.&lt;/p&gt;&#xA;&lt;h2 id=&#34;accessories&#34;&gt;Accessories&lt;/h2&gt;&#xA;&lt;p&gt;Having useful utilities for your deck can greatly enhance your enjoyment of using it.&lt;/p&gt;&#xA;&lt;h3 id=&#34;sd-cards&#34;&gt;SD Cards&lt;/h3&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re on a budget like me, you might have purchased a low-end 64GB (or lower storage in general) unit and simply need more space. The easiest solution is to buy an SD card and insert it into the easily accessible slot. Personally, I&amp;rsquo;ve had great experiences searching on Amazon for my desired size. It&amp;rsquo;s important to find one with adequate speed and capacity. Some even have &amp;ldquo;Steam Deck&amp;rdquo; in their description, which is usually a good sign. Nonetheless, don&amp;rsquo;t forget to check the reviews.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CasaOS</title>
      <link>http://localhost:1313/posts/casa/</link>
      <pubDate>Sat, 28 Sep 2024 12:10:50 +0200</pubDate>
      <guid>http://localhost:1313/posts/casa/</guid>
      <description>&lt;h2 id=&#34;exploring-casaos-for-server-revamp&#34;&gt;Exploring CasaOS for Server Revamp&lt;/h2&gt;&#xA;&lt;p&gt;I was eager to revamp my home server and embarked on a quest for new software projects that could breathe fresh life into it. That&amp;rsquo;s when I stumbled upon &lt;a href=&#34;https://github.com/IceWhaleTech/CasaOS&#34;&gt;CasaOS&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;not-just-an-os-but-a-user-friendly-web-panel&#34;&gt;Not Just an OS, But a User-Friendly Web Panel&lt;/h2&gt;&#xA;&lt;p&gt;Contrary to its name, CasaOS isn&amp;rsquo;t an operating system; rather, it&amp;rsquo;s a user-friendly web panel designed specifically for Linux servers. What caught my eye was its own &amp;ldquo;App Store,&amp;rdquo; a hub where I could effortlessly download popular server apps like Nextcloud or Jellyfin. The user interface is refreshingly minimalistic, making it a breeze to navigate. The installation process was a simple matter of copy-pasting a concise command. From the get-go, everything felt seamless.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Single GPU Passthrough in VMs</title>
      <link>http://localhost:1313/posts/gpu/</link>
      <pubDate>Sun, 28 Jul 2024 12:10:50 +0200</pubDate>
      <guid>http://localhost:1313/posts/gpu/</guid>
      <description>&lt;h1 id=&#34;the-problem&#34;&gt;The Problem&lt;/h1&gt;&#xA;&lt;p&gt;Most people are used to running a single operating system on their PCâ€”it&amp;rsquo;s the way it&amp;rsquo;s meant to be, and it usually works like a charm. But what if you need to test something on a different OS or want to use software only available on another one? The traditional approach would be to dual-boot or even triple-boot, but let&amp;rsquo;s be honest, that can be a bit of a headache.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Watson</title>
      <link>http://localhost:1313/projects/watson/</link>
      <pubDate>Fri, 03 Nov 2023 11:16:02 +0200</pubDate>
      <guid>http://localhost:1313/projects/watson/</guid>
      <description>Watson is a Discord Activity setter written in Go and Fyne. Its rather simple to use and can come in Handy. You can mainly use it for having Custom Status Messages to show your Friends what you are doing.</description>
    </item>
    <item>
      <title>Irene</title>
      <link>http://localhost:1313/projects/irene/</link>
      <pubDate>Tue, 03 Oct 2023 11:16:02 +0200</pubDate>
      <guid>http://localhost:1313/projects/irene/</guid>
      <description>Irene is a small Application written in Go and Fyne. I usually use it for resizing Pixelperfect versions of my Icons. Its a small Hobby Project i made a while ago so dont take it too Serious.</description>
    </item>
    <item>
      <title>Sherly</title>
      <link>http://localhost:1313/projects/sherly/</link>
      <pubDate>Mon, 03 Apr 2023 11:16:02 +0200</pubDate>
      <guid>http://localhost:1313/projects/sherly/</guid>
      <description>Sherly is a Multithreaded Duplicate File Finder for your Terminal, written in java. You can Easily find duplicate Images, videos as well as any other type of Data. That can be helpful if you run on small storage or just want to keep regular housekeeping.</description>
    </item>
    <item>
      <title>Contacts</title>
      <link>http://localhost:1313/contacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contacts/</guid>
      <description></description>
    </item>
    <item>
      <title>Data Safety</title>
      <link>http://localhost:1313/datenschutz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/datenschutz/</guid>
      <description></description>
    </item>
  </channel>
</rss>
